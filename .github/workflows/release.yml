name: Release APK

on:
  release:
    types: [published]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew || true
      
    - name: Extract version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Update version in build.gradle
      run: |
        sed -i "s/versionName \".*\"/versionName \"${{ steps.version.outputs.version }}\"/" app/build.gradle
        
    - name: Build release APK
      run: gradle assembleRelease || ./gradlew assembleRelease
      
    - name: Sign APK
      if: ${{ secrets.SIGNING_KEYSTORE_BASE64 }}
      run: |
        echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
        $ANDROID_HOME/build-tools/34.0.0/apksigner sign \
          --ks keystore.jks \
          --ks-key-alias "${{ secrets.SIGNING_KEY_ALIAS }}" \
          --ks-pass pass:"${{ secrets.SIGNING_STORE_PASSWORD }}" \
          --key-pass pass:"${{ secrets.SIGNING_KEY_PASSWORD }}" \
          --out app/build/outputs/apk/release/app-release-signed.apk \
          app/build/outputs/apk/release/app-release-unsigned.apk
          
    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: |
          ${{ secrets.SIGNING_KEYSTORE_BASE64 && 'app/build/outputs/apk/release/app-release-signed.apk' || 'app/build/outputs/apk/release/app-release-unsigned.apk' }}
        asset_name: termux-cli-manager-${{ steps.version.outputs.version }}.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Create download links
      run: |
        echo "## ðŸ“± Download Links" >> $GITHUB_STEP_SUMMARY
        echo "- [Download APK](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/termux-cli-manager-${{ steps.version.outputs.version }}.apk)" >> $GITHUB_STEP_SUMMARY
        echo "- [View Release](https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.version }})" >> $GITHUB_STEP_SUMMARY